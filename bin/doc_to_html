#!/usr/bin/env ruby

require File.join(File.dirname(__FILE__), '../lib/fdoc')

if ARGV.length < 2
  abort "Usage: doc_to_html [fdoc_directory] [html_directory] (url_base_path)"
end

fdoc_directory, html_directory, url_base_path = ARGV[0..2]
fdoc_directory = File.expand_path(fdoc_directory)
html_directory = File.expand_path(html_directory)

def mkdir(dirname)
  `mkdir -p #{dirname}` unless File.directory?(dirname)
end

mkdir(html_directory)

service = Fdoc::Service.new(fdoc_directory)
service_presenter = Fdoc::ServicePresenter.new(service,
  :html_directory => html_directory,
  :static_html => true,
  :url_base_path => url_base_path
)

css_path = File.join(File.dirname(__FILE__), '../lib/fdoc/templates/styles.css')
`cp "#{css_path}" "#{html_directory}"`

index_html_path = File.join(html_directory, "index.html")
File.open(index_html_path, "w") do |file|
  file.write(service_presenter.to_html)

  puts "created #{index_html_path}"
end

service_presenter.endpoints.flatten.each do |endpoint|
  endpoint_html_path = File.join(html_directory, endpoint.url)
  mkdir(File.dirname(endpoint_html_path))

  File.open(endpoint_html_path, "w") do |file|
    file.write(endpoint.to_html)

    puts "created #{endpoint_html_path}"
  end
end
